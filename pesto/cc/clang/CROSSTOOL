
major_version: "v0"
minor_version: "1"
default_target_cpu: "k8"

default_toolchain {
    cpu: "k8"
    toolchain_identifier: "linux-k8-clang"
}

toolchain {
    toolchain_identifier: "linux-k8-clang"

    compiler: "clang"
    target_cpu: "k8"
    abi_version: "clang"
    target_libc: "local"
    abi_libc_version: "local"  # "glibc_2.19"
    host_system_name: "x86_64-pc-linux-gnu"
    target_system_name: "x86_64-pc-linux-gnu"

    supports_gold_linker: true
    supports_thin_archives: true
    supports_start_end_lib: true
    supports_interface_shared_objects: true
    supports_embedded_runtimes: true
    static_runtimes_filegroup: "static-runtime-libs-k8"
    dynamic_runtimes_filegroup: "dynamic-runtime-libs-k8"
    supports_incremental_linker: true
    supports_normalizing_ar: true
    supports_fission: true
    # supports_dsym: true
    needsPic: true

    # shared start
    action_config {
        action_name: "cc-flags-make-variable"
        config_name: "cc-flags-make-variable"
    }

    feature { name: "host" }
    feature { name: "nonhost" }
    feature {
        name: "c++11"
        provides: "c++std"
        flag_set {
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "linkstamp-compile"
            flag_group {
                flag: "-nostdinc++"
                flag: "-std=c++11"
                flag: "-Wc++14-extensions"
                flag: "-Wc++2a-extensions"
                flag: "-Wno-binary-literal"
            }
        }
    }
    feature {
        name: "c++14"
        provides: "c++std"
        flag_set {
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "linkstamp-compile"
            flag_group {
                flag: "-nostdinc++"
                flag: "-std=c++14"
                flag: "-Wc++11-compat"
                flag: "-Wno-c++11-compat-binary-literal"
                flag: "-Wc++2a-extensions"
            }
        }
    }
    feature {
        name: "c++17"
        provides: "c++std"
        flag_set {
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "linkstamp-compile"
            flag_group {
                flag: "-nostdinc++"
                flag: "-std=c++17"
                flag: "-Wc++11-compat"
                flag: "-Wno-c++11-compat-binary-literal"
                flag: "-Wc++2a-extensions"
            }
        }
    }
    feature {
        name: "c++2a"
        provides: "c++std"
        flag_set {
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "linkstamp-compile"
            flag_group {
                flag: "-nostdinc++"
                flag: "-std=c++2a"
                flag: "-Wc++11-compat"
                flag: "-Wno-c++11-compat-binary-literal"
            }
        }
    }
    feature {
        name: "c++default"
        enabled: true
        flag_set {
            with_feature {
                not_feature: "c++11"
                not_feature: "c++14"
                not_feature: "c++17"
                not_feature: "c++2a"
            }
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "linkstamp-compile"
            flag_group {
                flag: "-nostdinc++"
                flag: "-std=c++11"
                flag: "-Wc++14-extensions"
                flag: "-Wc++2a-extensions"
                flag: "-Wno-binary-literal"
            }
        }
    }
    feature {
        name: "stdlib"
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            flag_group {
                flag: "-lm"
                flag: "-lstdc++"
            }
        }
    }
    feature {
        name: "parse_headers"
        flag_set {
            action: "c++-header-parsing"
            flag_group {
                flag: "-xc++-header"
                flag: "-fsyntax-only"
            }
        }
    }
    feature {
        name: "preprocess_headers"
        flag_set {
            action: "c++-header-preprocessing"
            flag_group {
                flag: "-xc++"
                flag: "-E"
            }
        }
    }
    feature {
        name: "determinism"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-Wno-builtin-macro-redefined"
                flag: "-D__DATE__=\"redacted\""
                flag: "-D__TIMESTAMP__=\"redacted\""
                flag: "-D__TIME__=\"redacted\""
            }
        }
    }
    feature {
        name: "alwayslink"
        flag_set {
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            action: "c++-link-executable"
            flag_group {
                flag: "-Wl,-no-as-needed"
            }
        }
    }
    feature {
        name: "pie"
        flag_set {
            action: "assemble"
            action: "preprocess-assemble"
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "c++-module-codegen"
            action: "cc-flags-make-variable"
            action: "lto-backend"
            action: "linkstamp-compile"
            flag_group {
                flag: "-mpie-copy-relocations"
                flag: "-fPIE"
            }
        }
        flag_set {
            action: "cc-flags-make-variable"
            action: "c++-link-executable"
            flag_group {
                flag: "-pie"
            }
        }
    }
    feature {
        name: "pic"
        flag_set {
            with_feature {
                not_feature: "pie"
            }
            action: "assemble"
            action: "preprocess-assemble"
            action: "c-compile"
            action: "c++-compile"
            action: "c++-module-codegen"
            action: "c++-module-compile"
            action: "linkstamp-compile"
            expand_if_all_available: "pic"
            flag_group {
                expand_if_all_available: "pic"
                flag: "-fPIC"
            }
            flag_group {
                expand_if_none_available: "pic"
                flag: "-fPIE"
            }
        }
    }
    feature {
        name: "hardening"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-U_FORTIFY_SOURCE"
                flag: "-D_FORTIFY_SOURCE=1"
                flag: "-fstack-protector-strong"
            }
        }
        flag_set {
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            flag_group {
                flag: "-Wl,-z,relro,-z,now"
            }
        }
        flag_set {
            action: "c++-link-executable"
            flag_group {
                flag: "-pie"
                flag: "-Wl,-z,relro,-z,now"
            }
        }
    }
    feature {
        name: "warnings"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-Wall"
                flag: "-Wno-unused-result"
                flag: "-Wsign-compare"
                # flag: "-Wno-free-nonheap-object"
                # flag: "-Wunused-but-set-parameter"
            }
        }
    }
    feature {
        name: "frame-pointer"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-fno-omit-frame-pointer"
            }
        }
    }
    feature {
        name: "build-id"
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            flag_group {
                flag: "-Wl,--build-id=md5"
                flag: "-Wl,--hash-style=gnu"
            }
        }
    }
    feature {
        name: "no-canonical-prefixes"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            flag_group {
                flag:"-no-canonical-prefixes"
                flag: "-fno-canonical-system-headers"
            }
        }
    }
    feature {
        name: "disable-assertions"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-DNDEBUG"
            }
        }
    }
    feature {
        name: "linker-bin-path"
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            flag_group {
                flag: "-B/usr/bin/"
            }
        }
    }
    feature {
        name: "common"
        implies: "stdlib"
        implies: "c++14"
        implies: "determinism"
        implies: "alwayslink"
        implies: "hardening"
        implies: "warnings"
        implies: "frame-pointer"
        implies: "build-id"
        implies: "no-canonical-prefixes"
        implies: "linker-bin-path"
    }
    feature {
        name: "fastbuild"
        implies: "common"
    }
    feature {
        name: "opt"
        implies: "common"
        implies: "disable-assertions"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-g0"
                flag: "-O2"
                # flag: "-fwrapv"
                flag: "-ffunction-sections"
                flag: "-fdata-sections"
            }
        }
        flag_set {
            action: "c++-link-dynamic-library"
            action: "c++-link-nodeps-dynamic-library"
            action: "c++-link-executable"
            flag_group {
                flag: "-Wl,--gc-sections"
            }
        }
    }
    feature {
        name: "dbg"
        implies: "common"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-g"
            }
        }
    }
    feature {
        name: "gold"
        enabled: true
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-interface-dynamic-library"
            flag_group {
                expand_if_none_available: "lto"
                flag: "-fuse-ld=gold"
            }
        }
    }
    feature {
        name: "lto"
        requires { feature: "nonhost" }
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            flag_group {
                flag: "-flto=thin"
            }
        }
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-interface-dynamic-library"
            flag_group {
                flag: "-flto=thin"
            }
        }
    }
    feature {
        name: "per_object_debug_info"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-module-codegen"
            action: "assemble"
            action: "preprocess-assemble"
            action: "lto-backend"
            flag_group {
                flag: "-gsplit-dwarf"
                flag: "-ggnu-pubnames"
            }
        }
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-interface-dynamic-library"
            flag_group {
                expand_if_all_available: "is_using_fission"
                flag: "-Wl,--gdb-index"
            }
        }
    }
    # shared end

    # project start
    feature {
        name: "python_link"
        flag_set {
            action: "c++-link-executable"
            action: "c++-link-dynamic-library"
            action: "c++-link-interface-dynamic-library"
            flag_group {
                flag: "-flto"
                flag: "-fuse-linker-plugin"
                flag: "-ffat-lto-objects"
                flag: "-flto-partition=none"
                flag: "-ldl"
                flag: "-lpthread"
                flag: "-lutil"
                flag: "-lssl"
                flag: "-lcrypto"
            }
        }
    }
    feature {
        name: "python_flags"
        implies: "python_link"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            flag_group {
                flag: "-flto"
                flag: "-fuse-linker-plugin"
                flag: "-ffat-lto-objects"
                flag: "-flto-partition=none"
            }
        }
    }
    feature {
        name: "python_nodist"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            flag_group {
                flag: "-std=c99"
                flag: "-Wextra"
                flag: "-Wno-unused-result"
                flag: "-Wno-unused-parameter"
                flag: "-Wno-missing-field-initializers"
                flag: "-Wno-cast-function-type"
                flag: "-Werror=implicit-function-declaration"
            }
        }
    }
    feature {
        name: "python_core"
        implies: "python_flags"
        implies: "python_nodist"
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            flag_group {
                flag: "-DPy_BUILD_CORE"
            }
        }
    }
    # project end

    tool_path { name: "ar" path: "llvm/bin/llvm-ar" }
    tool_path { name: "as" path: "llvm/bin/llvm-as" }
    tool_path { name: "compat-ld" path: "bin/ld.lld" }
    tool_path { name: "cpp" path: "llvm/bin/llvm-cpp" }
    tool_path { name: "dwp" path: "llvm/bin/llvm-dwp" }
    tool_path { name: "gcc" path: "bin/clang" }
    # tool_path { name: "gcc" path: "bin/nvcc_driver" }
    tool_path { name: "gcov" path: "llvm/bin/llvm-cov" }
    tool_path { name: "ld" path: "bin/ld.lld" }
    tool_path { name: "llvm-profdata" path: "llvm/bin/llvm-profdata" }
    tool_path { name: "nm" path: "llvm/bin/llvm-nm" }
    tool_path { name: "objcopy" path: "llvm/bin/llvm-objcopy" }
    tool_path { name: "objdump" path: "bin/objdump" }
    tool_path { name: "strip" path: "bin/strip" }

    compiler_flag: "-DARCH_K8"
    compiler_flag: "-DSUPPRESS_USE_FILE_OFFSET64"
    compiler_flag: "-D_REENTRANT"
    compiler_flag: "-D__STDC_FORMAT_MACROS"

    compiler_flag: "-faligned-allocation"
    compiler_flag: "-fcolor-diagnostics"
    compiler_flag: "-fdiagnostics-show-option"
    compiler_flag: "-fmessage-length=0"
    compiler_flag: "-fnew-alignment=8"
    compiler_flag: "-fno-exceptions"
    compiler_flag: "-fno-strict-aliasing"
    compiler_flag: "-fno-use-init-array"
    compiler_flag: "-funsigned-char"

    compiler_flag: "-gmlt"

    compiler_flag: "-Wfloat-overflow-conversion"
    compiler_flag: "-Wfloat-zero-conversion"
    compiler_flag: "-Wfor-loop-analysis"
    compiler_flag: "-Wformat-security"
    compiler_flag: "-Wframe-larger-than=16384"
    compiler_flag: "-Wgnu-redeclared-enum"
    compiler_flag: "-Winfinite-recursion"
    compiler_flag: "-Wliteral-conversion"
    compiler_flag: "-Wself-assign"
    compiler_flag: "-Wstring-conversion"
    compiler_flag: "-Wtautological-overlap-compare"
    compiler_flag: "-Wthread-safety-analysis"
    compiler_flag: "-Wunused-comparison"
    compiler_flag: "-Wvla"

    compiler_flag: "-Wno-ambiguous-member-template"
    compiler_flag: "-Wno-char-subscripts"
    compiler_flag: "-Wno-error=deprecated-declarations"
    compiler_flag: "-Wno-ignored-optimization-argument"
    compiler_flag: "-Wno-invalid-source-encoding"
    compiler_flag: "-Wno-pointer-sign"
    compiler_flag: "-Wno-private-header"
    compiler_flag: "-Wno-reserved-user-defined-literal"
    compiler_flag: "-Wno-return-type-c-linkage"
    compiler_flag: "-Wno-sign-compare"
    compiler_flag: "-Wno-strict-overflow"
    compiler_flag: "-Wno-uninitialized"
    compiler_flag: "-Wno-unknown-warning-option"
    compiler_flag: "-Wno-unused-command-line-argument"
    compiler_flag: "-Wno-unused-function"
    compiler_flag: "-Wno-writable-strings"

    cxx_flag: "-Wdeprecated-increment-bool"
    cxx_flag: "-Wno-deprecated"
    cxx_flag: "-Wno-invalid-offsetof"  # Needed for protobuf code (2017-11-07)
    cxx_flag: "-Wnon-virtual-dtor"
    cxx_flag: "-Woverloaded-virtual"
    cxx_flag: "-fshow-overloads=best"

    unfiltered_cxx_flag: "-I/usr/lib/clang/6.0.1/include"
    unfiltered_cxx_flag: "-I/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.0/include"
    unfiltered_cxx_flag: "-I/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.0/include-fixed"
    unfiltered_cxx_flag: "-I/usr/include"
    unfiltered_cxx_flag: "-I/usr/include/c++/8.2.0"
    unfiltered_cxx_flag: "-I/usr/include/c++/8.2.0/x86_64-pc-linux-gnu"
    unfiltered_cxx_flag: "-I/usr/include/c++/8.2.0/backward"

    linker_flag: "-Wl,--fatal-warnings"
    linker_flag: "--target=x86_64-unknown-linux-gnu"
    linker_flag: "-Wl,--eh-frame-hdr"
    linker_flag: "-Wl,-z,max-page-size=0x1000"
    linker_flag: "-lpthread"
    # linker_flag: "-L/usr/lib/gcc/x86_64-linux-gnu/4.8"
    # linker_flag: "-l:/lib/x86_64-linux-gnu/libc-2.19.so"

    objcopy_embed_flag: "-I"
    objcopy_embed_flag: "binary"

    ld_embed_flag: "-melf_x86_64"

    gcc_plugin_compiler_flag: "-std=gnu89"

    compilation_mode_flags {
        mode: OPT
        compiler_flag: "-Os"
        compiler_flag: "-fdebug-info-for-profiling"
        compiler_flag: "-fdebug-types-section"
        compiler_flag: "-fexperimental-new-pass-manager"
        compiler_flag: "-fno-split-dwarf-inlining"
    }

    # linking_mode_flags { mode: DYNAMIC }

    make_variable {
        name: "STACK_FRAME_UNLIMITED"
        value: "-Wframe-larger-than=100000000 -Wno-vla"
    }

    make_variable {
        name: "CC_FLAGS"
        value: "-no-canonical-prefixes --target=x86_64-unknown-linux-gnu -fno-omit-frame-pointer -fno-tree-vrp -msse3"
    }

    # cxx_builtin_include_directory: "include"
    cxx_builtin_include_directory: "/usr/lib/clang/6.0.1/include"
    cxx_builtin_include_directory: "/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.0/include"
    cxx_builtin_include_directory: "/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.0/include-fixed"
    cxx_builtin_include_directory: "/usr/include"
    cxx_builtin_include_directory: "/usr/include/c++/8.2.0"
    cxx_builtin_include_directory: "/usr/include/c++/8.2.0/x86_64-pc-linux-gnu"
    cxx_builtin_include_directory: "/usr/include/c++/8.2.0/backward"
    cxx_builtin_include_directory: "/"

    # builtin_sysroot: ""

    feature {
        name: "llvm_codegen"
        provides: "codegen"
        enabled: true
    }
    feature {
        name: "use_compiler_rt"
        requires { feature: "llvm_codegen" }
        # TODO(saugustine): At the moment, "use_compiler_rt" also
        # requires "linking_mode_flags { mode: FULLY_STATIC" ... },
        # but that isn't a feature. We should probably convert it.
        flag_set {
            action: "c++-link"
            action: "c++-link-interface-dynamic-library"
            action: "c++-link-dynamic-library"
            action: "c++-link-executable"
            # "link" is a misnomer for these actions. They are really just
            # invocations of ar.
            # action: "c++-link-pic-static-library"
            # action: "c++-link-static-library"
            # action: "c++-link-alwayslink-static-library"
            # action: "c++-link-pic-static-library"
            # action: "c++-link-alwayslink-pic-static-library"
            flag_group {
                flag: "-rtlib=compiler-rt"
                flag: "-lunwind"
            }
        }
    }
    feature {
        name: "xray"
        requires {
            feature: "llvm_codegen"
            feature: "nonhost"
        }
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "c++-link-interface-dynamic-library"
            action: "c++-link-dynamic-library"
            action: "c++-link-executable"
            flag_group {
                flag: "-fxray-instrument"
            }
        }
    }
    feature {
        name: "minimal_ubsan"
        requires { feature: "llvm_codegen" }
        flag_set {
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "c++-module-codegen"
            flag_group {
                flag: "-fsanitize=return,returns-nonnull-attribute,vla-bound,unreachable,float-cast-overflow"
                flag: "-fsanitize-trap=all"
                flag: "-DUNDEFINED_BEHAVIOR_SANITIZER"
            }
        }
    }
    feature {
        name: "minimal_ubsan_enabled_by_default"
        requires {
            feature: "llvm_codegen"
            feature: "fastbuild"
        }
        enabled: true
        implies: "minimal_ubsan"
    }
    feature {
        name: "copts"
        flag_set {
            expand_if_all_available: "copts"
            action: "assemble"
            action: "preprocess-assemble"
            action: "c-compile"
            action: "c++-compile"
            action: "c++-header-parsing"
            action: "c++-header-preprocessing"
            action: "c++-module-compile"
            action: "c++-module-codegen"
            action: "lto-backend"
            flag_group {
                iterate_over: "copts"
                flag: "%{copts}"
            }
        }
    }
}
