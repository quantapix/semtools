###

build --override_repository=io_bazel_rules_closure=/home/qpix/clone/pesto/bzl/rules/closure/upstream

# build --action_env TF_SYSTEM_LIBS="astor_archive,com_googlesource_code_re2,curl,gif_archive,jemalloc,jpeg,jsoncpp_git,lmdb,nasm,org_sqlite,pcre,png_archive,six_archive,snappy,swig,termcolor_archive,zlib_archive"
# build --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla
# build --host_javabase=@java//:jdk11
# build --java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla
# build --python_top=@python//:pesto
# build -c fastbuild
# build:cuda --crosstool_top=//cc/gcc:toolchain
# build:gdr --define=with_gdr_support=true
# build:ngraph --define=with_ngraph_support=true
# build:noaws --define=no_aws_support=true
# build:nogcp --define=no_gcp_support=true
# build:nohdfs --define=no_hdfs_support=true
# build:noignite --define=no_ignite_support=true
# build:nokafka --define=no_kafka_support=true
# build:sys --python_top=@python//:sys
# build:verbs --define=with_verbs_support=true

build --action_env CUDA_TOOLKIT_PATH="/home/qpix/clone/pesto/lib/nvidia/upstream/cuda_cudnn"
build --action_env CUDNN_INSTALL_PATH="/home/qpix/clone/pesto/lib/nvidia/upstream/cuda_cudnn"
# build --action_env GCC_HOST_COMPILER_PATH="/usr/bin/gcc-7"
build --action_env LD_LIBRARY_PATH="/home/qpix/clone/pesto/lib/nvidia/upstream/cuda_cudnn/lib64:/home/qpix/clone/pesto/lib/nvidia/upstream/nccl/lib:/home/qpix/clone/pesto/lib/nvidia/upstream/tensorrt/lib"
build --action_env NCCL_HDR_PATH="/home/qpix/tools/nccl/lib/../include"
build --action_env NCCL_INSTALL_PATH="/home/qpix/tools/nccl/lib"
build --action_env PYTHON_BIN_PATH="/home/qpix/tools/tpy/bin/python"
build --action_env PYTHON_LIB_PATH="/usr/lib/python3.7/site-packages"
build --action_env TENSORRT_INSTALL_PATH="/home/qpix/clone/pesto/lib/nvidia/upstream/tensorrt/targets/x86_64-linux-gnu/lib"
# build --action_env TF_CUDA_CLANG="0"
build --action_env TF_CUDA_COMPUTE_CAPABILITIES="6.1,7.0"
build --action_env TF_CUDA_VERSION="10.0"
build --action_env TF_CUDNN_VERSION="7"
build --action_env TF_NCCL_VERSION="2"
build --action_env TF_NEED_CUDA="1"
build --action_env TF_NEED_OPENCL_SYCL="0"
build --action_env TF_NEED_ROCM="0"
build --action_env TF_TENSORRT_VERSION="5.0.2"

build --action_env TF_CUDA_CLANG="1"
build --action_env TF_DOWNLOAD_CLANG="1"

# build --compiler=gcc
# build --cpu=local
# build --compiler=compiler

build --config=cuda
build --config=xla

build --copt=-march=native
build --host_copt=-march=native

build --define absl=1

build --define framework_shared_object=true
build --define=allow_oversize_protos=true
build --define=grpc_no_ares=true
build --define=use_fast_cpp_protos=true

build --define with_gdr_support=true
build --define with_jemalloc=true
build --define with_ngraph_support=true
build --define with_verbs_support=true

build --define=INCLUDEDIR=$(PREFIX)/include
build --define=LIBDIR=$(PREFIX)/lib
build --define=PREFIX=/usr
build --define=no_aws_support=true
build --define=no_gcp_support=true
build --define=no_hdfs_support=true
build --define=no_ignite_support=true
build --define=no_kafka_support=true

build --distinct_host_configuration=false
build --experimental_enable_repo_mapping
build --genrule_strategy=standalone

# build --crosstool_top=//cc/gcc:toolchain

build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
build:cuda --define=using_cuda=true --define=using_cuda_nvcc=true

# build:cuda_clang --crosstool_top=//clang:toolchain
# build:cuda_clang --crosstool_top=@local_config_cuda//crosstool:toolchain

# build --java_toolchain=@bazel_tools//tools/jdk:toolchain_java9
# build --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_java9

# build --override_repository=bazel_skylib=/home/qpix/clone/pesto/bzl/skylib/upstream
# build --override_repository=local_config_cuda=/home/qpix/clone/pesto/lib/nvidia/upstream
# build --override_repository=local_config_rocm=/home/qpix/clone/pesto/nil
# build --override_repository=local_config_tensorrt=/home/qpix/clone/pesto/lib/nvidia/upstream/tensorrt
# build --override_repository=protobuf_archive=/home/qpix/clone/pesto/google/protobuf/upstream

build --python_path="/home/qpix/tools/tpy/bin/python"
build --sandbox_debug
build --spawn_strategy=standalone
build --verbose_failures

build -c opt

build:cuda_clang --define=using_cuda=true --define=using_cuda_clang=true --define=using_clang=true

# build:download_clang --crosstool_top=@local_config_download_clang//:toolchain
# build:download_clang --define=using_clang=true

build:download_clang_use_lld --linkopt='-fuse-ld=lld'

build:dynamic_kernels --copt=-DAUTOLOAD_DYNAMIC_KERNELS
build:dynamic_kernels --define=dynamic_loaded_kernels=true

build:mkl --define=build_with_mkl=true --define=enable_mkl=true
build:mkl --define=using_mkl=true

build:mkl -c opt

build:mkl_open_source_only --define=build_with_mkl=true --define=enable_mkl=true
build:mkl_open_source_only --define=build_with_mkl_dnn_only=true
build:mkl_open_source_only --define=using_mkl_dnn_only=true

build:monolithic --define framework_shared_object=false

build:opt --copt=-march=native
build:opt --host_copt=-march=native
build:opt --copt=-Wno-sign-compare

build:opt --define with_default_optimizations=true

build:v2 --define=tf_api_version=2

build:xla --define with_xla_support=true

# common --action_env LD_LIBRARY_PATH="/home/qpix/clone/pesto/bazel-bin/external/python/Modules"

test --config=cuda

build:cuda_clang --config=download_clang_use_lld
test:cuda_clang --config=download_clang_use_lld
build --config=cuda_clang
test --config=cuda_clang
